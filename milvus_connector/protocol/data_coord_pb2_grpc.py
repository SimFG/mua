# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import common_pb2 as common__pb2
from . import data_coord_pb2 as data__coord__pb2
from . import index_coord_pb2 as index__coord__pb2
from . import internal_pb2 as internal__pb2
from . import milvus_pb2 as milvus__pb2


class DataCoordStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetComponentStates = channel.unary_unary(
                '/milvus.proto.data.DataCoord/GetComponentStates',
                request_serializer=milvus__pb2.GetComponentStatesRequest.SerializeToString,
                response_deserializer=milvus__pb2.ComponentStates.FromString,
                )
        self.GetTimeTickChannel = channel.unary_unary(
                '/milvus.proto.data.DataCoord/GetTimeTickChannel',
                request_serializer=internal__pb2.GetTimeTickChannelRequest.SerializeToString,
                response_deserializer=milvus__pb2.StringResponse.FromString,
                )
        self.GetStatisticsChannel = channel.unary_unary(
                '/milvus.proto.data.DataCoord/GetStatisticsChannel',
                request_serializer=internal__pb2.GetStatisticsChannelRequest.SerializeToString,
                response_deserializer=milvus__pb2.StringResponse.FromString,
                )
        self.Flush = channel.unary_unary(
                '/milvus.proto.data.DataCoord/Flush',
                request_serializer=data__coord__pb2.FlushRequest.SerializeToString,
                response_deserializer=data__coord__pb2.FlushResponse.FromString,
                )
        self.AssignSegmentID = channel.unary_unary(
                '/milvus.proto.data.DataCoord/AssignSegmentID',
                request_serializer=data__coord__pb2.AssignSegmentIDRequest.SerializeToString,
                response_deserializer=data__coord__pb2.AssignSegmentIDResponse.FromString,
                )
        self.GetSegmentInfo = channel.unary_unary(
                '/milvus.proto.data.DataCoord/GetSegmentInfo',
                request_serializer=data__coord__pb2.GetSegmentInfoRequest.SerializeToString,
                response_deserializer=data__coord__pb2.GetSegmentInfoResponse.FromString,
                )
        self.GetSegmentStates = channel.unary_unary(
                '/milvus.proto.data.DataCoord/GetSegmentStates',
                request_serializer=data__coord__pb2.GetSegmentStatesRequest.SerializeToString,
                response_deserializer=data__coord__pb2.GetSegmentStatesResponse.FromString,
                )
        self.GetInsertBinlogPaths = channel.unary_unary(
                '/milvus.proto.data.DataCoord/GetInsertBinlogPaths',
                request_serializer=data__coord__pb2.GetInsertBinlogPathsRequest.SerializeToString,
                response_deserializer=data__coord__pb2.GetInsertBinlogPathsResponse.FromString,
                )
        self.GetCollectionStatistics = channel.unary_unary(
                '/milvus.proto.data.DataCoord/GetCollectionStatistics',
                request_serializer=data__coord__pb2.GetCollectionStatisticsRequest.SerializeToString,
                response_deserializer=data__coord__pb2.GetCollectionStatisticsResponse.FromString,
                )
        self.GetPartitionStatistics = channel.unary_unary(
                '/milvus.proto.data.DataCoord/GetPartitionStatistics',
                request_serializer=data__coord__pb2.GetPartitionStatisticsRequest.SerializeToString,
                response_deserializer=data__coord__pb2.GetPartitionStatisticsResponse.FromString,
                )
        self.GetSegmentInfoChannel = channel.unary_unary(
                '/milvus.proto.data.DataCoord/GetSegmentInfoChannel',
                request_serializer=data__coord__pb2.GetSegmentInfoChannelRequest.SerializeToString,
                response_deserializer=milvus__pb2.StringResponse.FromString,
                )
        self.SaveBinlogPaths = channel.unary_unary(
                '/milvus.proto.data.DataCoord/SaveBinlogPaths',
                request_serializer=data__coord__pb2.SaveBinlogPathsRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.GetRecoveryInfo = channel.unary_unary(
                '/milvus.proto.data.DataCoord/GetRecoveryInfo',
                request_serializer=data__coord__pb2.GetRecoveryInfoRequest.SerializeToString,
                response_deserializer=data__coord__pb2.GetRecoveryInfoResponse.FromString,
                )
        self.GetRecoveryInfoV2 = channel.unary_unary(
                '/milvus.proto.data.DataCoord/GetRecoveryInfoV2',
                request_serializer=data__coord__pb2.GetRecoveryInfoRequestV2.SerializeToString,
                response_deserializer=data__coord__pb2.GetRecoveryInfoResponseV2.FromString,
                )
        self.GetFlushedSegments = channel.unary_unary(
                '/milvus.proto.data.DataCoord/GetFlushedSegments',
                request_serializer=data__coord__pb2.GetFlushedSegmentsRequest.SerializeToString,
                response_deserializer=data__coord__pb2.GetFlushedSegmentsResponse.FromString,
                )
        self.GetSegmentsByStates = channel.unary_unary(
                '/milvus.proto.data.DataCoord/GetSegmentsByStates',
                request_serializer=data__coord__pb2.GetSegmentsByStatesRequest.SerializeToString,
                response_deserializer=data__coord__pb2.GetSegmentsByStatesResponse.FromString,
                )
        self.GetFlushAllState = channel.unary_unary(
                '/milvus.proto.data.DataCoord/GetFlushAllState',
                request_serializer=milvus__pb2.GetFlushAllStateRequest.SerializeToString,
                response_deserializer=milvus__pb2.GetFlushAllStateResponse.FromString,
                )
        self.ShowConfigurations = channel.unary_unary(
                '/milvus.proto.data.DataCoord/ShowConfigurations',
                request_serializer=internal__pb2.ShowConfigurationsRequest.SerializeToString,
                response_deserializer=internal__pb2.ShowConfigurationsResponse.FromString,
                )
        self.GetMetrics = channel.unary_unary(
                '/milvus.proto.data.DataCoord/GetMetrics',
                request_serializer=milvus__pb2.GetMetricsRequest.SerializeToString,
                response_deserializer=milvus__pb2.GetMetricsResponse.FromString,
                )
        self.ManualCompaction = channel.unary_unary(
                '/milvus.proto.data.DataCoord/ManualCompaction',
                request_serializer=milvus__pb2.ManualCompactionRequest.SerializeToString,
                response_deserializer=milvus__pb2.ManualCompactionResponse.FromString,
                )
        self.GetCompactionState = channel.unary_unary(
                '/milvus.proto.data.DataCoord/GetCompactionState',
                request_serializer=milvus__pb2.GetCompactionStateRequest.SerializeToString,
                response_deserializer=milvus__pb2.GetCompactionStateResponse.FromString,
                )
        self.GetCompactionStateWithPlans = channel.unary_unary(
                '/milvus.proto.data.DataCoord/GetCompactionStateWithPlans',
                request_serializer=milvus__pb2.GetCompactionPlansRequest.SerializeToString,
                response_deserializer=milvus__pb2.GetCompactionPlansResponse.FromString,
                )
        self.WatchChannels = channel.unary_unary(
                '/milvus.proto.data.DataCoord/WatchChannels',
                request_serializer=data__coord__pb2.WatchChannelsRequest.SerializeToString,
                response_deserializer=data__coord__pb2.WatchChannelsResponse.FromString,
                )
        self.GetFlushState = channel.unary_unary(
                '/milvus.proto.data.DataCoord/GetFlushState',
                request_serializer=data__coord__pb2.GetFlushStateRequest.SerializeToString,
                response_deserializer=milvus__pb2.GetFlushStateResponse.FromString,
                )
        self.DropVirtualChannel = channel.unary_unary(
                '/milvus.proto.data.DataCoord/DropVirtualChannel',
                request_serializer=data__coord__pb2.DropVirtualChannelRequest.SerializeToString,
                response_deserializer=data__coord__pb2.DropVirtualChannelResponse.FromString,
                )
        self.SetSegmentState = channel.unary_unary(
                '/milvus.proto.data.DataCoord/SetSegmentState',
                request_serializer=data__coord__pb2.SetSegmentStateRequest.SerializeToString,
                response_deserializer=data__coord__pb2.SetSegmentStateResponse.FromString,
                )
        self.Import = channel.unary_unary(
                '/milvus.proto.data.DataCoord/Import',
                request_serializer=data__coord__pb2.ImportTaskRequest.SerializeToString,
                response_deserializer=data__coord__pb2.ImportTaskResponse.FromString,
                )
        self.UpdateSegmentStatistics = channel.unary_unary(
                '/milvus.proto.data.DataCoord/UpdateSegmentStatistics',
                request_serializer=data__coord__pb2.UpdateSegmentStatisticsRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.UpdateChannelCheckpoint = channel.unary_unary(
                '/milvus.proto.data.DataCoord/UpdateChannelCheckpoint',
                request_serializer=data__coord__pb2.UpdateChannelCheckpointRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.SaveImportSegment = channel.unary_unary(
                '/milvus.proto.data.DataCoord/SaveImportSegment',
                request_serializer=data__coord__pb2.SaveImportSegmentRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.UnsetIsImportingState = channel.unary_unary(
                '/milvus.proto.data.DataCoord/UnsetIsImportingState',
                request_serializer=data__coord__pb2.UnsetIsImportingStateRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.MarkSegmentsDropped = channel.unary_unary(
                '/milvus.proto.data.DataCoord/MarkSegmentsDropped',
                request_serializer=data__coord__pb2.MarkSegmentsDroppedRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.BroadcastAlteredCollection = channel.unary_unary(
                '/milvus.proto.data.DataCoord/BroadcastAlteredCollection',
                request_serializer=data__coord__pb2.AlterCollectionRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.CheckHealth = channel.unary_unary(
                '/milvus.proto.data.DataCoord/CheckHealth',
                request_serializer=milvus__pb2.CheckHealthRequest.SerializeToString,
                response_deserializer=milvus__pb2.CheckHealthResponse.FromString,
                )
        self.CreateIndex = channel.unary_unary(
                '/milvus.proto.data.DataCoord/CreateIndex',
                request_serializer=index__coord__pb2.CreateIndexRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.AlterIndex = channel.unary_unary(
                '/milvus.proto.data.DataCoord/AlterIndex',
                request_serializer=index__coord__pb2.AlterIndexRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.GetIndexState = channel.unary_unary(
                '/milvus.proto.data.DataCoord/GetIndexState',
                request_serializer=index__coord__pb2.GetIndexStateRequest.SerializeToString,
                response_deserializer=index__coord__pb2.GetIndexStateResponse.FromString,
                )
        self.GetSegmentIndexState = channel.unary_unary(
                '/milvus.proto.data.DataCoord/GetSegmentIndexState',
                request_serializer=index__coord__pb2.GetSegmentIndexStateRequest.SerializeToString,
                response_deserializer=index__coord__pb2.GetSegmentIndexStateResponse.FromString,
                )
        self.GetIndexInfos = channel.unary_unary(
                '/milvus.proto.data.DataCoord/GetIndexInfos',
                request_serializer=index__coord__pb2.GetIndexInfoRequest.SerializeToString,
                response_deserializer=index__coord__pb2.GetIndexInfoResponse.FromString,
                )
        self.DropIndex = channel.unary_unary(
                '/milvus.proto.data.DataCoord/DropIndex',
                request_serializer=index__coord__pb2.DropIndexRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.DescribeIndex = channel.unary_unary(
                '/milvus.proto.data.DataCoord/DescribeIndex',
                request_serializer=index__coord__pb2.DescribeIndexRequest.SerializeToString,
                response_deserializer=index__coord__pb2.DescribeIndexResponse.FromString,
                )
        self.GetIndexStatistics = channel.unary_unary(
                '/milvus.proto.data.DataCoord/GetIndexStatistics',
                request_serializer=index__coord__pb2.GetIndexStatisticsRequest.SerializeToString,
                response_deserializer=index__coord__pb2.GetIndexStatisticsResponse.FromString,
                )
        self.GetIndexBuildProgress = channel.unary_unary(
                '/milvus.proto.data.DataCoord/GetIndexBuildProgress',
                request_serializer=index__coord__pb2.GetIndexBuildProgressRequest.SerializeToString,
                response_deserializer=index__coord__pb2.GetIndexBuildProgressResponse.FromString,
                )
        self.ListIndexes = channel.unary_unary(
                '/milvus.proto.data.DataCoord/ListIndexes',
                request_serializer=index__coord__pb2.ListIndexesRequest.SerializeToString,
                response_deserializer=index__coord__pb2.ListIndexesResponse.FromString,
                )
        self.GcConfirm = channel.unary_unary(
                '/milvus.proto.data.DataCoord/GcConfirm',
                request_serializer=data__coord__pb2.GcConfirmRequest.SerializeToString,
                response_deserializer=data__coord__pb2.GcConfirmResponse.FromString,
                )
        self.ReportDataNodeTtMsgs = channel.unary_unary(
                '/milvus.proto.data.DataCoord/ReportDataNodeTtMsgs',
                request_serializer=data__coord__pb2.ReportDataNodeTtMsgsRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.GcControl = channel.unary_unary(
                '/milvus.proto.data.DataCoord/GcControl',
                request_serializer=data__coord__pb2.GcControlRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.ImportV2 = channel.unary_unary(
                '/milvus.proto.data.DataCoord/ImportV2',
                request_serializer=internal__pb2.ImportRequestInternal.SerializeToString,
                response_deserializer=internal__pb2.ImportResponse.FromString,
                )
        self.GetImportProgress = channel.unary_unary(
                '/milvus.proto.data.DataCoord/GetImportProgress',
                request_serializer=internal__pb2.GetImportProgressRequest.SerializeToString,
                response_deserializer=internal__pb2.GetImportProgressResponse.FromString,
                )
        self.ListImports = channel.unary_unary(
                '/milvus.proto.data.DataCoord/ListImports',
                request_serializer=internal__pb2.ListImportsRequestInternal.SerializeToString,
                response_deserializer=internal__pb2.ListImportsResponse.FromString,
                )


class DataCoordServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetComponentStates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimeTickChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStatisticsChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Flush(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssignSegmentID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSegmentInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSegmentStates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInsertBinlogPaths(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCollectionStatistics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPartitionStatistics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSegmentInfoChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SaveBinlogPaths(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRecoveryInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRecoveryInfoV2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFlushedSegments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSegmentsByStates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFlushAllState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ShowConfigurations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMetrics(self, request, context):
        """https://wiki.lfaidata.foundation/display/MIL/MEP+8+--+Add+metrics+for+proxy
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ManualCompaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCompactionState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCompactionStateWithPlans(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchChannels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFlushState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DropVirtualChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSegmentState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Import(self, request, context):
        """https://wiki.lfaidata.foundation/display/MIL/MEP+24+--+Support+bulk+load
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSegmentStatistics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateChannelCheckpoint(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SaveImportSegment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnsetIsImportingState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkSegmentsDropped(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BroadcastAlteredCollection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckHealth(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateIndex(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AlterIndex(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIndexState(self, request, context):
        """Deprecated: use DescribeIndex instead
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSegmentIndexState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIndexInfos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DropIndex(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DescribeIndex(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIndexStatistics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIndexBuildProgress(self, request, context):
        """Deprecated: use DescribeIndex instead
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListIndexes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GcConfirm(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReportDataNodeTtMsgs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GcControl(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ImportV2(self, request, context):
        """importV2
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetImportProgress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListImports(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataCoordServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetComponentStates': grpc.unary_unary_rpc_method_handler(
                    servicer.GetComponentStates,
                    request_deserializer=milvus__pb2.GetComponentStatesRequest.FromString,
                    response_serializer=milvus__pb2.ComponentStates.SerializeToString,
            ),
            'GetTimeTickChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTimeTickChannel,
                    request_deserializer=internal__pb2.GetTimeTickChannelRequest.FromString,
                    response_serializer=milvus__pb2.StringResponse.SerializeToString,
            ),
            'GetStatisticsChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatisticsChannel,
                    request_deserializer=internal__pb2.GetStatisticsChannelRequest.FromString,
                    response_serializer=milvus__pb2.StringResponse.SerializeToString,
            ),
            'Flush': grpc.unary_unary_rpc_method_handler(
                    servicer.Flush,
                    request_deserializer=data__coord__pb2.FlushRequest.FromString,
                    response_serializer=data__coord__pb2.FlushResponse.SerializeToString,
            ),
            'AssignSegmentID': grpc.unary_unary_rpc_method_handler(
                    servicer.AssignSegmentID,
                    request_deserializer=data__coord__pb2.AssignSegmentIDRequest.FromString,
                    response_serializer=data__coord__pb2.AssignSegmentIDResponse.SerializeToString,
            ),
            'GetSegmentInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSegmentInfo,
                    request_deserializer=data__coord__pb2.GetSegmentInfoRequest.FromString,
                    response_serializer=data__coord__pb2.GetSegmentInfoResponse.SerializeToString,
            ),
            'GetSegmentStates': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSegmentStates,
                    request_deserializer=data__coord__pb2.GetSegmentStatesRequest.FromString,
                    response_serializer=data__coord__pb2.GetSegmentStatesResponse.SerializeToString,
            ),
            'GetInsertBinlogPaths': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInsertBinlogPaths,
                    request_deserializer=data__coord__pb2.GetInsertBinlogPathsRequest.FromString,
                    response_serializer=data__coord__pb2.GetInsertBinlogPathsResponse.SerializeToString,
            ),
            'GetCollectionStatistics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCollectionStatistics,
                    request_deserializer=data__coord__pb2.GetCollectionStatisticsRequest.FromString,
                    response_serializer=data__coord__pb2.GetCollectionStatisticsResponse.SerializeToString,
            ),
            'GetPartitionStatistics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPartitionStatistics,
                    request_deserializer=data__coord__pb2.GetPartitionStatisticsRequest.FromString,
                    response_serializer=data__coord__pb2.GetPartitionStatisticsResponse.SerializeToString,
            ),
            'GetSegmentInfoChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSegmentInfoChannel,
                    request_deserializer=data__coord__pb2.GetSegmentInfoChannelRequest.FromString,
                    response_serializer=milvus__pb2.StringResponse.SerializeToString,
            ),
            'SaveBinlogPaths': grpc.unary_unary_rpc_method_handler(
                    servicer.SaveBinlogPaths,
                    request_deserializer=data__coord__pb2.SaveBinlogPathsRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'GetRecoveryInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRecoveryInfo,
                    request_deserializer=data__coord__pb2.GetRecoveryInfoRequest.FromString,
                    response_serializer=data__coord__pb2.GetRecoveryInfoResponse.SerializeToString,
            ),
            'GetRecoveryInfoV2': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRecoveryInfoV2,
                    request_deserializer=data__coord__pb2.GetRecoveryInfoRequestV2.FromString,
                    response_serializer=data__coord__pb2.GetRecoveryInfoResponseV2.SerializeToString,
            ),
            'GetFlushedSegments': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFlushedSegments,
                    request_deserializer=data__coord__pb2.GetFlushedSegmentsRequest.FromString,
                    response_serializer=data__coord__pb2.GetFlushedSegmentsResponse.SerializeToString,
            ),
            'GetSegmentsByStates': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSegmentsByStates,
                    request_deserializer=data__coord__pb2.GetSegmentsByStatesRequest.FromString,
                    response_serializer=data__coord__pb2.GetSegmentsByStatesResponse.SerializeToString,
            ),
            'GetFlushAllState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFlushAllState,
                    request_deserializer=milvus__pb2.GetFlushAllStateRequest.FromString,
                    response_serializer=milvus__pb2.GetFlushAllStateResponse.SerializeToString,
            ),
            'ShowConfigurations': grpc.unary_unary_rpc_method_handler(
                    servicer.ShowConfigurations,
                    request_deserializer=internal__pb2.ShowConfigurationsRequest.FromString,
                    response_serializer=internal__pb2.ShowConfigurationsResponse.SerializeToString,
            ),
            'GetMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMetrics,
                    request_deserializer=milvus__pb2.GetMetricsRequest.FromString,
                    response_serializer=milvus__pb2.GetMetricsResponse.SerializeToString,
            ),
            'ManualCompaction': grpc.unary_unary_rpc_method_handler(
                    servicer.ManualCompaction,
                    request_deserializer=milvus__pb2.ManualCompactionRequest.FromString,
                    response_serializer=milvus__pb2.ManualCompactionResponse.SerializeToString,
            ),
            'GetCompactionState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCompactionState,
                    request_deserializer=milvus__pb2.GetCompactionStateRequest.FromString,
                    response_serializer=milvus__pb2.GetCompactionStateResponse.SerializeToString,
            ),
            'GetCompactionStateWithPlans': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCompactionStateWithPlans,
                    request_deserializer=milvus__pb2.GetCompactionPlansRequest.FromString,
                    response_serializer=milvus__pb2.GetCompactionPlansResponse.SerializeToString,
            ),
            'WatchChannels': grpc.unary_unary_rpc_method_handler(
                    servicer.WatchChannels,
                    request_deserializer=data__coord__pb2.WatchChannelsRequest.FromString,
                    response_serializer=data__coord__pb2.WatchChannelsResponse.SerializeToString,
            ),
            'GetFlushState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFlushState,
                    request_deserializer=data__coord__pb2.GetFlushStateRequest.FromString,
                    response_serializer=milvus__pb2.GetFlushStateResponse.SerializeToString,
            ),
            'DropVirtualChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.DropVirtualChannel,
                    request_deserializer=data__coord__pb2.DropVirtualChannelRequest.FromString,
                    response_serializer=data__coord__pb2.DropVirtualChannelResponse.SerializeToString,
            ),
            'SetSegmentState': grpc.unary_unary_rpc_method_handler(
                    servicer.SetSegmentState,
                    request_deserializer=data__coord__pb2.SetSegmentStateRequest.FromString,
                    response_serializer=data__coord__pb2.SetSegmentStateResponse.SerializeToString,
            ),
            'Import': grpc.unary_unary_rpc_method_handler(
                    servicer.Import,
                    request_deserializer=data__coord__pb2.ImportTaskRequest.FromString,
                    response_serializer=data__coord__pb2.ImportTaskResponse.SerializeToString,
            ),
            'UpdateSegmentStatistics': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSegmentStatistics,
                    request_deserializer=data__coord__pb2.UpdateSegmentStatisticsRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'UpdateChannelCheckpoint': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateChannelCheckpoint,
                    request_deserializer=data__coord__pb2.UpdateChannelCheckpointRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'SaveImportSegment': grpc.unary_unary_rpc_method_handler(
                    servicer.SaveImportSegment,
                    request_deserializer=data__coord__pb2.SaveImportSegmentRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'UnsetIsImportingState': grpc.unary_unary_rpc_method_handler(
                    servicer.UnsetIsImportingState,
                    request_deserializer=data__coord__pb2.UnsetIsImportingStateRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'MarkSegmentsDropped': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkSegmentsDropped,
                    request_deserializer=data__coord__pb2.MarkSegmentsDroppedRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'BroadcastAlteredCollection': grpc.unary_unary_rpc_method_handler(
                    servicer.BroadcastAlteredCollection,
                    request_deserializer=data__coord__pb2.AlterCollectionRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'CheckHealth': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckHealth,
                    request_deserializer=milvus__pb2.CheckHealthRequest.FromString,
                    response_serializer=milvus__pb2.CheckHealthResponse.SerializeToString,
            ),
            'CreateIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateIndex,
                    request_deserializer=index__coord__pb2.CreateIndexRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'AlterIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.AlterIndex,
                    request_deserializer=index__coord__pb2.AlterIndexRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'GetIndexState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIndexState,
                    request_deserializer=index__coord__pb2.GetIndexStateRequest.FromString,
                    response_serializer=index__coord__pb2.GetIndexStateResponse.SerializeToString,
            ),
            'GetSegmentIndexState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSegmentIndexState,
                    request_deserializer=index__coord__pb2.GetSegmentIndexStateRequest.FromString,
                    response_serializer=index__coord__pb2.GetSegmentIndexStateResponse.SerializeToString,
            ),
            'GetIndexInfos': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIndexInfos,
                    request_deserializer=index__coord__pb2.GetIndexInfoRequest.FromString,
                    response_serializer=index__coord__pb2.GetIndexInfoResponse.SerializeToString,
            ),
            'DropIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.DropIndex,
                    request_deserializer=index__coord__pb2.DropIndexRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'DescribeIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.DescribeIndex,
                    request_deserializer=index__coord__pb2.DescribeIndexRequest.FromString,
                    response_serializer=index__coord__pb2.DescribeIndexResponse.SerializeToString,
            ),
            'GetIndexStatistics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIndexStatistics,
                    request_deserializer=index__coord__pb2.GetIndexStatisticsRequest.FromString,
                    response_serializer=index__coord__pb2.GetIndexStatisticsResponse.SerializeToString,
            ),
            'GetIndexBuildProgress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIndexBuildProgress,
                    request_deserializer=index__coord__pb2.GetIndexBuildProgressRequest.FromString,
                    response_serializer=index__coord__pb2.GetIndexBuildProgressResponse.SerializeToString,
            ),
            'ListIndexes': grpc.unary_unary_rpc_method_handler(
                    servicer.ListIndexes,
                    request_deserializer=index__coord__pb2.ListIndexesRequest.FromString,
                    response_serializer=index__coord__pb2.ListIndexesResponse.SerializeToString,
            ),
            'GcConfirm': grpc.unary_unary_rpc_method_handler(
                    servicer.GcConfirm,
                    request_deserializer=data__coord__pb2.GcConfirmRequest.FromString,
                    response_serializer=data__coord__pb2.GcConfirmResponse.SerializeToString,
            ),
            'ReportDataNodeTtMsgs': grpc.unary_unary_rpc_method_handler(
                    servicer.ReportDataNodeTtMsgs,
                    request_deserializer=data__coord__pb2.ReportDataNodeTtMsgsRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'GcControl': grpc.unary_unary_rpc_method_handler(
                    servicer.GcControl,
                    request_deserializer=data__coord__pb2.GcControlRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'ImportV2': grpc.unary_unary_rpc_method_handler(
                    servicer.ImportV2,
                    request_deserializer=internal__pb2.ImportRequestInternal.FromString,
                    response_serializer=internal__pb2.ImportResponse.SerializeToString,
            ),
            'GetImportProgress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetImportProgress,
                    request_deserializer=internal__pb2.GetImportProgressRequest.FromString,
                    response_serializer=internal__pb2.GetImportProgressResponse.SerializeToString,
            ),
            'ListImports': grpc.unary_unary_rpc_method_handler(
                    servicer.ListImports,
                    request_deserializer=internal__pb2.ListImportsRequestInternal.FromString,
                    response_serializer=internal__pb2.ListImportsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'milvus.proto.data.DataCoord', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DataCoord(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetComponentStates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/GetComponentStates',
            milvus__pb2.GetComponentStatesRequest.SerializeToString,
            milvus__pb2.ComponentStates.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTimeTickChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/GetTimeTickChannel',
            internal__pb2.GetTimeTickChannelRequest.SerializeToString,
            milvus__pb2.StringResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStatisticsChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/GetStatisticsChannel',
            internal__pb2.GetStatisticsChannelRequest.SerializeToString,
            milvus__pb2.StringResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Flush(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/Flush',
            data__coord__pb2.FlushRequest.SerializeToString,
            data__coord__pb2.FlushResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AssignSegmentID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/AssignSegmentID',
            data__coord__pb2.AssignSegmentIDRequest.SerializeToString,
            data__coord__pb2.AssignSegmentIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSegmentInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/GetSegmentInfo',
            data__coord__pb2.GetSegmentInfoRequest.SerializeToString,
            data__coord__pb2.GetSegmentInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSegmentStates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/GetSegmentStates',
            data__coord__pb2.GetSegmentStatesRequest.SerializeToString,
            data__coord__pb2.GetSegmentStatesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetInsertBinlogPaths(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/GetInsertBinlogPaths',
            data__coord__pb2.GetInsertBinlogPathsRequest.SerializeToString,
            data__coord__pb2.GetInsertBinlogPathsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCollectionStatistics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/GetCollectionStatistics',
            data__coord__pb2.GetCollectionStatisticsRequest.SerializeToString,
            data__coord__pb2.GetCollectionStatisticsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPartitionStatistics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/GetPartitionStatistics',
            data__coord__pb2.GetPartitionStatisticsRequest.SerializeToString,
            data__coord__pb2.GetPartitionStatisticsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSegmentInfoChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/GetSegmentInfoChannel',
            data__coord__pb2.GetSegmentInfoChannelRequest.SerializeToString,
            milvus__pb2.StringResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SaveBinlogPaths(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/SaveBinlogPaths',
            data__coord__pb2.SaveBinlogPathsRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRecoveryInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/GetRecoveryInfo',
            data__coord__pb2.GetRecoveryInfoRequest.SerializeToString,
            data__coord__pb2.GetRecoveryInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRecoveryInfoV2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/GetRecoveryInfoV2',
            data__coord__pb2.GetRecoveryInfoRequestV2.SerializeToString,
            data__coord__pb2.GetRecoveryInfoResponseV2.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFlushedSegments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/GetFlushedSegments',
            data__coord__pb2.GetFlushedSegmentsRequest.SerializeToString,
            data__coord__pb2.GetFlushedSegmentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSegmentsByStates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/GetSegmentsByStates',
            data__coord__pb2.GetSegmentsByStatesRequest.SerializeToString,
            data__coord__pb2.GetSegmentsByStatesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFlushAllState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/GetFlushAllState',
            milvus__pb2.GetFlushAllStateRequest.SerializeToString,
            milvus__pb2.GetFlushAllStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ShowConfigurations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/ShowConfigurations',
            internal__pb2.ShowConfigurationsRequest.SerializeToString,
            internal__pb2.ShowConfigurationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/GetMetrics',
            milvus__pb2.GetMetricsRequest.SerializeToString,
            milvus__pb2.GetMetricsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ManualCompaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/ManualCompaction',
            milvus__pb2.ManualCompactionRequest.SerializeToString,
            milvus__pb2.ManualCompactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCompactionState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/GetCompactionState',
            milvus__pb2.GetCompactionStateRequest.SerializeToString,
            milvus__pb2.GetCompactionStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCompactionStateWithPlans(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/GetCompactionStateWithPlans',
            milvus__pb2.GetCompactionPlansRequest.SerializeToString,
            milvus__pb2.GetCompactionPlansResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WatchChannels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/WatchChannels',
            data__coord__pb2.WatchChannelsRequest.SerializeToString,
            data__coord__pb2.WatchChannelsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFlushState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/GetFlushState',
            data__coord__pb2.GetFlushStateRequest.SerializeToString,
            milvus__pb2.GetFlushStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DropVirtualChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/DropVirtualChannel',
            data__coord__pb2.DropVirtualChannelRequest.SerializeToString,
            data__coord__pb2.DropVirtualChannelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetSegmentState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/SetSegmentState',
            data__coord__pb2.SetSegmentStateRequest.SerializeToString,
            data__coord__pb2.SetSegmentStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Import(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/Import',
            data__coord__pb2.ImportTaskRequest.SerializeToString,
            data__coord__pb2.ImportTaskResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateSegmentStatistics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/UpdateSegmentStatistics',
            data__coord__pb2.UpdateSegmentStatisticsRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateChannelCheckpoint(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/UpdateChannelCheckpoint',
            data__coord__pb2.UpdateChannelCheckpointRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SaveImportSegment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/SaveImportSegment',
            data__coord__pb2.SaveImportSegmentRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnsetIsImportingState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/UnsetIsImportingState',
            data__coord__pb2.UnsetIsImportingStateRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarkSegmentsDropped(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/MarkSegmentsDropped',
            data__coord__pb2.MarkSegmentsDroppedRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BroadcastAlteredCollection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/BroadcastAlteredCollection',
            data__coord__pb2.AlterCollectionRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckHealth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/CheckHealth',
            milvus__pb2.CheckHealthRequest.SerializeToString,
            milvus__pb2.CheckHealthResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/CreateIndex',
            index__coord__pb2.CreateIndexRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AlterIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/AlterIndex',
            index__coord__pb2.AlterIndexRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetIndexState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/GetIndexState',
            index__coord__pb2.GetIndexStateRequest.SerializeToString,
            index__coord__pb2.GetIndexStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSegmentIndexState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/GetSegmentIndexState',
            index__coord__pb2.GetSegmentIndexStateRequest.SerializeToString,
            index__coord__pb2.GetSegmentIndexStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetIndexInfos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/GetIndexInfos',
            index__coord__pb2.GetIndexInfoRequest.SerializeToString,
            index__coord__pb2.GetIndexInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DropIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/DropIndex',
            index__coord__pb2.DropIndexRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DescribeIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/DescribeIndex',
            index__coord__pb2.DescribeIndexRequest.SerializeToString,
            index__coord__pb2.DescribeIndexResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetIndexStatistics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/GetIndexStatistics',
            index__coord__pb2.GetIndexStatisticsRequest.SerializeToString,
            index__coord__pb2.GetIndexStatisticsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetIndexBuildProgress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/GetIndexBuildProgress',
            index__coord__pb2.GetIndexBuildProgressRequest.SerializeToString,
            index__coord__pb2.GetIndexBuildProgressResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListIndexes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/ListIndexes',
            index__coord__pb2.ListIndexesRequest.SerializeToString,
            index__coord__pb2.ListIndexesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GcConfirm(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/GcConfirm',
            data__coord__pb2.GcConfirmRequest.SerializeToString,
            data__coord__pb2.GcConfirmResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReportDataNodeTtMsgs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/ReportDataNodeTtMsgs',
            data__coord__pb2.ReportDataNodeTtMsgsRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GcControl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/GcControl',
            data__coord__pb2.GcControlRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ImportV2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/ImportV2',
            internal__pb2.ImportRequestInternal.SerializeToString,
            internal__pb2.ImportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetImportProgress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/GetImportProgress',
            internal__pb2.GetImportProgressRequest.SerializeToString,
            internal__pb2.GetImportProgressResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListImports(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataCoord/ListImports',
            internal__pb2.ListImportsRequestInternal.SerializeToString,
            internal__pb2.ListImportsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class DataNodeStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetComponentStates = channel.unary_unary(
                '/milvus.proto.data.DataNode/GetComponentStates',
                request_serializer=milvus__pb2.GetComponentStatesRequest.SerializeToString,
                response_deserializer=milvus__pb2.ComponentStates.FromString,
                )
        self.GetStatisticsChannel = channel.unary_unary(
                '/milvus.proto.data.DataNode/GetStatisticsChannel',
                request_serializer=internal__pb2.GetStatisticsChannelRequest.SerializeToString,
                response_deserializer=milvus__pb2.StringResponse.FromString,
                )
        self.WatchDmChannels = channel.unary_unary(
                '/milvus.proto.data.DataNode/WatchDmChannels',
                request_serializer=data__coord__pb2.WatchDmChannelsRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.FlushSegments = channel.unary_unary(
                '/milvus.proto.data.DataNode/FlushSegments',
                request_serializer=data__coord__pb2.FlushSegmentsRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.ShowConfigurations = channel.unary_unary(
                '/milvus.proto.data.DataNode/ShowConfigurations',
                request_serializer=internal__pb2.ShowConfigurationsRequest.SerializeToString,
                response_deserializer=internal__pb2.ShowConfigurationsResponse.FromString,
                )
        self.GetMetrics = channel.unary_unary(
                '/milvus.proto.data.DataNode/GetMetrics',
                request_serializer=milvus__pb2.GetMetricsRequest.SerializeToString,
                response_deserializer=milvus__pb2.GetMetricsResponse.FromString,
                )
        self.Compaction = channel.unary_unary(
                '/milvus.proto.data.DataNode/Compaction',
                request_serializer=data__coord__pb2.CompactionPlan.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.GetCompactionState = channel.unary_unary(
                '/milvus.proto.data.DataNode/GetCompactionState',
                request_serializer=data__coord__pb2.CompactionStateRequest.SerializeToString,
                response_deserializer=data__coord__pb2.CompactionStateResponse.FromString,
                )
        self.SyncSegments = channel.unary_unary(
                '/milvus.proto.data.DataNode/SyncSegments',
                request_serializer=data__coord__pb2.SyncSegmentsRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.Import = channel.unary_unary(
                '/milvus.proto.data.DataNode/Import',
                request_serializer=data__coord__pb2.ImportTaskRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.ResendSegmentStats = channel.unary_unary(
                '/milvus.proto.data.DataNode/ResendSegmentStats',
                request_serializer=data__coord__pb2.ResendSegmentStatsRequest.SerializeToString,
                response_deserializer=data__coord__pb2.ResendSegmentStatsResponse.FromString,
                )
        self.AddImportSegment = channel.unary_unary(
                '/milvus.proto.data.DataNode/AddImportSegment',
                request_serializer=data__coord__pb2.AddImportSegmentRequest.SerializeToString,
                response_deserializer=data__coord__pb2.AddImportSegmentResponse.FromString,
                )
        self.FlushChannels = channel.unary_unary(
                '/milvus.proto.data.DataNode/FlushChannels',
                request_serializer=data__coord__pb2.FlushChannelsRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.NotifyChannelOperation = channel.unary_unary(
                '/milvus.proto.data.DataNode/NotifyChannelOperation',
                request_serializer=data__coord__pb2.ChannelOperationsRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.CheckChannelOperationProgress = channel.unary_unary(
                '/milvus.proto.data.DataNode/CheckChannelOperationProgress',
                request_serializer=data__coord__pb2.ChannelWatchInfo.SerializeToString,
                response_deserializer=data__coord__pb2.ChannelOperationProgressResponse.FromString,
                )
        self.PreImport = channel.unary_unary(
                '/milvus.proto.data.DataNode/PreImport',
                request_serializer=data__coord__pb2.PreImportRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.ImportV2 = channel.unary_unary(
                '/milvus.proto.data.DataNode/ImportV2',
                request_serializer=data__coord__pb2.ImportRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.QueryPreImport = channel.unary_unary(
                '/milvus.proto.data.DataNode/QueryPreImport',
                request_serializer=data__coord__pb2.QueryPreImportRequest.SerializeToString,
                response_deserializer=data__coord__pb2.QueryPreImportResponse.FromString,
                )
        self.QueryImport = channel.unary_unary(
                '/milvus.proto.data.DataNode/QueryImport',
                request_serializer=data__coord__pb2.QueryImportRequest.SerializeToString,
                response_deserializer=data__coord__pb2.QueryImportResponse.FromString,
                )
        self.DropImport = channel.unary_unary(
                '/milvus.proto.data.DataNode/DropImport',
                request_serializer=data__coord__pb2.DropImportRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )


class DataNodeServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetComponentStates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStatisticsChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchDmChannels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FlushSegments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ShowConfigurations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMetrics(self, request, context):
        """https://wiki.lfaidata.foundation/display/MIL/MEP+8+--+Add+metrics+for+proxy
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Compaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCompactionState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SyncSegments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Import(self, request, context):
        """https://wiki.lfaidata.foundation/display/MIL/MEP+24+--+Support+bulk+load
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResendSegmentStats(self, request, context):
        """Deprecated
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddImportSegment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FlushChannels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NotifyChannelOperation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckChannelOperationProgress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PreImport(self, request, context):
        """import v2
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ImportV2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryPreImport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryImport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DropImport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataNodeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetComponentStates': grpc.unary_unary_rpc_method_handler(
                    servicer.GetComponentStates,
                    request_deserializer=milvus__pb2.GetComponentStatesRequest.FromString,
                    response_serializer=milvus__pb2.ComponentStates.SerializeToString,
            ),
            'GetStatisticsChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatisticsChannel,
                    request_deserializer=internal__pb2.GetStatisticsChannelRequest.FromString,
                    response_serializer=milvus__pb2.StringResponse.SerializeToString,
            ),
            'WatchDmChannels': grpc.unary_unary_rpc_method_handler(
                    servicer.WatchDmChannels,
                    request_deserializer=data__coord__pb2.WatchDmChannelsRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'FlushSegments': grpc.unary_unary_rpc_method_handler(
                    servicer.FlushSegments,
                    request_deserializer=data__coord__pb2.FlushSegmentsRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'ShowConfigurations': grpc.unary_unary_rpc_method_handler(
                    servicer.ShowConfigurations,
                    request_deserializer=internal__pb2.ShowConfigurationsRequest.FromString,
                    response_serializer=internal__pb2.ShowConfigurationsResponse.SerializeToString,
            ),
            'GetMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMetrics,
                    request_deserializer=milvus__pb2.GetMetricsRequest.FromString,
                    response_serializer=milvus__pb2.GetMetricsResponse.SerializeToString,
            ),
            'Compaction': grpc.unary_unary_rpc_method_handler(
                    servicer.Compaction,
                    request_deserializer=data__coord__pb2.CompactionPlan.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'GetCompactionState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCompactionState,
                    request_deserializer=data__coord__pb2.CompactionStateRequest.FromString,
                    response_serializer=data__coord__pb2.CompactionStateResponse.SerializeToString,
            ),
            'SyncSegments': grpc.unary_unary_rpc_method_handler(
                    servicer.SyncSegments,
                    request_deserializer=data__coord__pb2.SyncSegmentsRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'Import': grpc.unary_unary_rpc_method_handler(
                    servicer.Import,
                    request_deserializer=data__coord__pb2.ImportTaskRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'ResendSegmentStats': grpc.unary_unary_rpc_method_handler(
                    servicer.ResendSegmentStats,
                    request_deserializer=data__coord__pb2.ResendSegmentStatsRequest.FromString,
                    response_serializer=data__coord__pb2.ResendSegmentStatsResponse.SerializeToString,
            ),
            'AddImportSegment': grpc.unary_unary_rpc_method_handler(
                    servicer.AddImportSegment,
                    request_deserializer=data__coord__pb2.AddImportSegmentRequest.FromString,
                    response_serializer=data__coord__pb2.AddImportSegmentResponse.SerializeToString,
            ),
            'FlushChannels': grpc.unary_unary_rpc_method_handler(
                    servicer.FlushChannels,
                    request_deserializer=data__coord__pb2.FlushChannelsRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'NotifyChannelOperation': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifyChannelOperation,
                    request_deserializer=data__coord__pb2.ChannelOperationsRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'CheckChannelOperationProgress': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckChannelOperationProgress,
                    request_deserializer=data__coord__pb2.ChannelWatchInfo.FromString,
                    response_serializer=data__coord__pb2.ChannelOperationProgressResponse.SerializeToString,
            ),
            'PreImport': grpc.unary_unary_rpc_method_handler(
                    servicer.PreImport,
                    request_deserializer=data__coord__pb2.PreImportRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'ImportV2': grpc.unary_unary_rpc_method_handler(
                    servicer.ImportV2,
                    request_deserializer=data__coord__pb2.ImportRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'QueryPreImport': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryPreImport,
                    request_deserializer=data__coord__pb2.QueryPreImportRequest.FromString,
                    response_serializer=data__coord__pb2.QueryPreImportResponse.SerializeToString,
            ),
            'QueryImport': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryImport,
                    request_deserializer=data__coord__pb2.QueryImportRequest.FromString,
                    response_serializer=data__coord__pb2.QueryImportResponse.SerializeToString,
            ),
            'DropImport': grpc.unary_unary_rpc_method_handler(
                    servicer.DropImport,
                    request_deserializer=data__coord__pb2.DropImportRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'milvus.proto.data.DataNode', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DataNode(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetComponentStates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataNode/GetComponentStates',
            milvus__pb2.GetComponentStatesRequest.SerializeToString,
            milvus__pb2.ComponentStates.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStatisticsChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataNode/GetStatisticsChannel',
            internal__pb2.GetStatisticsChannelRequest.SerializeToString,
            milvus__pb2.StringResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WatchDmChannels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataNode/WatchDmChannels',
            data__coord__pb2.WatchDmChannelsRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FlushSegments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataNode/FlushSegments',
            data__coord__pb2.FlushSegmentsRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ShowConfigurations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataNode/ShowConfigurations',
            internal__pb2.ShowConfigurationsRequest.SerializeToString,
            internal__pb2.ShowConfigurationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataNode/GetMetrics',
            milvus__pb2.GetMetricsRequest.SerializeToString,
            milvus__pb2.GetMetricsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Compaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataNode/Compaction',
            data__coord__pb2.CompactionPlan.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCompactionState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataNode/GetCompactionState',
            data__coord__pb2.CompactionStateRequest.SerializeToString,
            data__coord__pb2.CompactionStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SyncSegments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataNode/SyncSegments',
            data__coord__pb2.SyncSegmentsRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Import(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataNode/Import',
            data__coord__pb2.ImportTaskRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResendSegmentStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataNode/ResendSegmentStats',
            data__coord__pb2.ResendSegmentStatsRequest.SerializeToString,
            data__coord__pb2.ResendSegmentStatsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddImportSegment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataNode/AddImportSegment',
            data__coord__pb2.AddImportSegmentRequest.SerializeToString,
            data__coord__pb2.AddImportSegmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FlushChannels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataNode/FlushChannels',
            data__coord__pb2.FlushChannelsRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NotifyChannelOperation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataNode/NotifyChannelOperation',
            data__coord__pb2.ChannelOperationsRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckChannelOperationProgress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataNode/CheckChannelOperationProgress',
            data__coord__pb2.ChannelWatchInfo.SerializeToString,
            data__coord__pb2.ChannelOperationProgressResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PreImport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataNode/PreImport',
            data__coord__pb2.PreImportRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ImportV2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataNode/ImportV2',
            data__coord__pb2.ImportRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryPreImport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataNode/QueryPreImport',
            data__coord__pb2.QueryPreImportRequest.SerializeToString,
            data__coord__pb2.QueryPreImportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryImport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataNode/QueryImport',
            data__coord__pb2.QueryImportRequest.SerializeToString,
            data__coord__pb2.QueryImportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DropImport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.data.DataNode/DropImport',
            data__coord__pb2.DropImportRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
