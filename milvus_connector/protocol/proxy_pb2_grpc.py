# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import common_pb2 as common__pb2
from . import internal_pb2 as internal__pb2
from . import milvus_pb2 as milvus__pb2
from . import proxy_pb2 as proxy__pb2


class ProxyStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetComponentStates = channel.unary_unary(
                '/milvus.proto.proxy.Proxy/GetComponentStates',
                request_serializer=milvus__pb2.GetComponentStatesRequest.SerializeToString,
                response_deserializer=milvus__pb2.ComponentStates.FromString,
                )
        self.GetStatisticsChannel = channel.unary_unary(
                '/milvus.proto.proxy.Proxy/GetStatisticsChannel',
                request_serializer=internal__pb2.GetStatisticsChannelRequest.SerializeToString,
                response_deserializer=milvus__pb2.StringResponse.FromString,
                )
        self.InvalidateCollectionMetaCache = channel.unary_unary(
                '/milvus.proto.proxy.Proxy/InvalidateCollectionMetaCache',
                request_serializer=proxy__pb2.InvalidateCollMetaCacheRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.GetDdChannel = channel.unary_unary(
                '/milvus.proto.proxy.Proxy/GetDdChannel',
                request_serializer=internal__pb2.GetDdChannelRequest.SerializeToString,
                response_deserializer=milvus__pb2.StringResponse.FromString,
                )
        self.InvalidateCredentialCache = channel.unary_unary(
                '/milvus.proto.proxy.Proxy/InvalidateCredentialCache',
                request_serializer=proxy__pb2.InvalidateCredCacheRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.UpdateCredentialCache = channel.unary_unary(
                '/milvus.proto.proxy.Proxy/UpdateCredentialCache',
                request_serializer=proxy__pb2.UpdateCredCacheRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.RefreshPolicyInfoCache = channel.unary_unary(
                '/milvus.proto.proxy.Proxy/RefreshPolicyInfoCache',
                request_serializer=proxy__pb2.RefreshPolicyInfoCacheRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.GetProxyMetrics = channel.unary_unary(
                '/milvus.proto.proxy.Proxy/GetProxyMetrics',
                request_serializer=milvus__pb2.GetMetricsRequest.SerializeToString,
                response_deserializer=milvus__pb2.GetMetricsResponse.FromString,
                )
        self.SetRates = channel.unary_unary(
                '/milvus.proto.proxy.Proxy/SetRates',
                request_serializer=proxy__pb2.SetRatesRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.ListClientInfos = channel.unary_unary(
                '/milvus.proto.proxy.Proxy/ListClientInfos',
                request_serializer=proxy__pb2.ListClientInfosRequest.SerializeToString,
                response_deserializer=proxy__pb2.ListClientInfosResponse.FromString,
                )
        self.ImportV2 = channel.unary_unary(
                '/milvus.proto.proxy.Proxy/ImportV2',
                request_serializer=internal__pb2.ImportRequest.SerializeToString,
                response_deserializer=internal__pb2.ImportResponse.FromString,
                )
        self.GetImportProgress = channel.unary_unary(
                '/milvus.proto.proxy.Proxy/GetImportProgress',
                request_serializer=internal__pb2.GetImportProgressRequest.SerializeToString,
                response_deserializer=internal__pb2.GetImportProgressResponse.FromString,
                )
        self.ListImports = channel.unary_unary(
                '/milvus.proto.proxy.Proxy/ListImports',
                request_serializer=internal__pb2.ListImportsRequest.SerializeToString,
                response_deserializer=internal__pb2.ListImportsResponse.FromString,
                )


class ProxyServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetComponentStates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStatisticsChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InvalidateCollectionMetaCache(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDdChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InvalidateCredentialCache(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCredentialCache(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RefreshPolicyInfoCache(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProxyMetrics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetRates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListClientInfos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ImportV2(self, request, context):
        """importV2
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetImportProgress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListImports(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProxyServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetComponentStates': grpc.unary_unary_rpc_method_handler(
                    servicer.GetComponentStates,
                    request_deserializer=milvus__pb2.GetComponentStatesRequest.FromString,
                    response_serializer=milvus__pb2.ComponentStates.SerializeToString,
            ),
            'GetStatisticsChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatisticsChannel,
                    request_deserializer=internal__pb2.GetStatisticsChannelRequest.FromString,
                    response_serializer=milvus__pb2.StringResponse.SerializeToString,
            ),
            'InvalidateCollectionMetaCache': grpc.unary_unary_rpc_method_handler(
                    servicer.InvalidateCollectionMetaCache,
                    request_deserializer=proxy__pb2.InvalidateCollMetaCacheRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'GetDdChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDdChannel,
                    request_deserializer=internal__pb2.GetDdChannelRequest.FromString,
                    response_serializer=milvus__pb2.StringResponse.SerializeToString,
            ),
            'InvalidateCredentialCache': grpc.unary_unary_rpc_method_handler(
                    servicer.InvalidateCredentialCache,
                    request_deserializer=proxy__pb2.InvalidateCredCacheRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'UpdateCredentialCache': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCredentialCache,
                    request_deserializer=proxy__pb2.UpdateCredCacheRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'RefreshPolicyInfoCache': grpc.unary_unary_rpc_method_handler(
                    servicer.RefreshPolicyInfoCache,
                    request_deserializer=proxy__pb2.RefreshPolicyInfoCacheRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'GetProxyMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProxyMetrics,
                    request_deserializer=milvus__pb2.GetMetricsRequest.FromString,
                    response_serializer=milvus__pb2.GetMetricsResponse.SerializeToString,
            ),
            'SetRates': grpc.unary_unary_rpc_method_handler(
                    servicer.SetRates,
                    request_deserializer=proxy__pb2.SetRatesRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'ListClientInfos': grpc.unary_unary_rpc_method_handler(
                    servicer.ListClientInfos,
                    request_deserializer=proxy__pb2.ListClientInfosRequest.FromString,
                    response_serializer=proxy__pb2.ListClientInfosResponse.SerializeToString,
            ),
            'ImportV2': grpc.unary_unary_rpc_method_handler(
                    servicer.ImportV2,
                    request_deserializer=internal__pb2.ImportRequest.FromString,
                    response_serializer=internal__pb2.ImportResponse.SerializeToString,
            ),
            'GetImportProgress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetImportProgress,
                    request_deserializer=internal__pb2.GetImportProgressRequest.FromString,
                    response_serializer=internal__pb2.GetImportProgressResponse.SerializeToString,
            ),
            'ListImports': grpc.unary_unary_rpc_method_handler(
                    servicer.ListImports,
                    request_deserializer=internal__pb2.ListImportsRequest.FromString,
                    response_serializer=internal__pb2.ListImportsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'milvus.proto.proxy.Proxy', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Proxy(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetComponentStates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.proxy.Proxy/GetComponentStates',
            milvus__pb2.GetComponentStatesRequest.SerializeToString,
            milvus__pb2.ComponentStates.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStatisticsChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.proxy.Proxy/GetStatisticsChannel',
            internal__pb2.GetStatisticsChannelRequest.SerializeToString,
            milvus__pb2.StringResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InvalidateCollectionMetaCache(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.proxy.Proxy/InvalidateCollectionMetaCache',
            proxy__pb2.InvalidateCollMetaCacheRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDdChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.proxy.Proxy/GetDdChannel',
            internal__pb2.GetDdChannelRequest.SerializeToString,
            milvus__pb2.StringResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InvalidateCredentialCache(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.proxy.Proxy/InvalidateCredentialCache',
            proxy__pb2.InvalidateCredCacheRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCredentialCache(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.proxy.Proxy/UpdateCredentialCache',
            proxy__pb2.UpdateCredCacheRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RefreshPolicyInfoCache(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.proxy.Proxy/RefreshPolicyInfoCache',
            proxy__pb2.RefreshPolicyInfoCacheRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProxyMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.proxy.Proxy/GetProxyMetrics',
            milvus__pb2.GetMetricsRequest.SerializeToString,
            milvus__pb2.GetMetricsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetRates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.proxy.Proxy/SetRates',
            proxy__pb2.SetRatesRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListClientInfos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.proxy.Proxy/ListClientInfos',
            proxy__pb2.ListClientInfosRequest.SerializeToString,
            proxy__pb2.ListClientInfosResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ImportV2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.proxy.Proxy/ImportV2',
            internal__pb2.ImportRequest.SerializeToString,
            internal__pb2.ImportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetImportProgress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.proxy.Proxy/GetImportProgress',
            internal__pb2.GetImportProgressRequest.SerializeToString,
            internal__pb2.GetImportProgressResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListImports(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.proxy.Proxy/ListImports',
            internal__pb2.ListImportsRequest.SerializeToString,
            internal__pb2.ListImportsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
