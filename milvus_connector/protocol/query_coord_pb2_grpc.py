# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import common_pb2 as common__pb2
from . import internal_pb2 as internal__pb2
from . import milvus_pb2 as milvus__pb2
from . import query_coord_pb2 as query__coord__pb2


class QueryCoordStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetComponentStates = channel.unary_unary(
                '/milvus.proto.query.QueryCoord/GetComponentStates',
                request_serializer=milvus__pb2.GetComponentStatesRequest.SerializeToString,
                response_deserializer=milvus__pb2.ComponentStates.FromString,
                )
        self.GetTimeTickChannel = channel.unary_unary(
                '/milvus.proto.query.QueryCoord/GetTimeTickChannel',
                request_serializer=internal__pb2.GetTimeTickChannelRequest.SerializeToString,
                response_deserializer=milvus__pb2.StringResponse.FromString,
                )
        self.GetStatisticsChannel = channel.unary_unary(
                '/milvus.proto.query.QueryCoord/GetStatisticsChannel',
                request_serializer=internal__pb2.GetStatisticsChannelRequest.SerializeToString,
                response_deserializer=milvus__pb2.StringResponse.FromString,
                )
        self.ShowCollections = channel.unary_unary(
                '/milvus.proto.query.QueryCoord/ShowCollections',
                request_serializer=query__coord__pb2.ShowCollectionsRequest.SerializeToString,
                response_deserializer=query__coord__pb2.ShowCollectionsResponse.FromString,
                )
        self.ShowPartitions = channel.unary_unary(
                '/milvus.proto.query.QueryCoord/ShowPartitions',
                request_serializer=query__coord__pb2.ShowPartitionsRequest.SerializeToString,
                response_deserializer=query__coord__pb2.ShowPartitionsResponse.FromString,
                )
        self.LoadPartitions = channel.unary_unary(
                '/milvus.proto.query.QueryCoord/LoadPartitions',
                request_serializer=query__coord__pb2.LoadPartitionsRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.ReleasePartitions = channel.unary_unary(
                '/milvus.proto.query.QueryCoord/ReleasePartitions',
                request_serializer=query__coord__pb2.ReleasePartitionsRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.LoadCollection = channel.unary_unary(
                '/milvus.proto.query.QueryCoord/LoadCollection',
                request_serializer=query__coord__pb2.LoadCollectionRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.ReleaseCollection = channel.unary_unary(
                '/milvus.proto.query.QueryCoord/ReleaseCollection',
                request_serializer=query__coord__pb2.ReleaseCollectionRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.SyncNewCreatedPartition = channel.unary_unary(
                '/milvus.proto.query.QueryCoord/SyncNewCreatedPartition',
                request_serializer=query__coord__pb2.SyncNewCreatedPartitionRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.GetPartitionStates = channel.unary_unary(
                '/milvus.proto.query.QueryCoord/GetPartitionStates',
                request_serializer=query__coord__pb2.GetPartitionStatesRequest.SerializeToString,
                response_deserializer=query__coord__pb2.GetPartitionStatesResponse.FromString,
                )
        self.GetSegmentInfo = channel.unary_unary(
                '/milvus.proto.query.QueryCoord/GetSegmentInfo',
                request_serializer=query__coord__pb2.GetSegmentInfoRequest.SerializeToString,
                response_deserializer=query__coord__pb2.GetSegmentInfoResponse.FromString,
                )
        self.LoadBalance = channel.unary_unary(
                '/milvus.proto.query.QueryCoord/LoadBalance',
                request_serializer=query__coord__pb2.LoadBalanceRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.ShowConfigurations = channel.unary_unary(
                '/milvus.proto.query.QueryCoord/ShowConfigurations',
                request_serializer=internal__pb2.ShowConfigurationsRequest.SerializeToString,
                response_deserializer=internal__pb2.ShowConfigurationsResponse.FromString,
                )
        self.GetMetrics = channel.unary_unary(
                '/milvus.proto.query.QueryCoord/GetMetrics',
                request_serializer=milvus__pb2.GetMetricsRequest.SerializeToString,
                response_deserializer=milvus__pb2.GetMetricsResponse.FromString,
                )
        self.GetReplicas = channel.unary_unary(
                '/milvus.proto.query.QueryCoord/GetReplicas',
                request_serializer=milvus__pb2.GetReplicasRequest.SerializeToString,
                response_deserializer=milvus__pb2.GetReplicasResponse.FromString,
                )
        self.GetShardLeaders = channel.unary_unary(
                '/milvus.proto.query.QueryCoord/GetShardLeaders',
                request_serializer=query__coord__pb2.GetShardLeadersRequest.SerializeToString,
                response_deserializer=query__coord__pb2.GetShardLeadersResponse.FromString,
                )
        self.CheckHealth = channel.unary_unary(
                '/milvus.proto.query.QueryCoord/CheckHealth',
                request_serializer=milvus__pb2.CheckHealthRequest.SerializeToString,
                response_deserializer=milvus__pb2.CheckHealthResponse.FromString,
                )
        self.CreateResourceGroup = channel.unary_unary(
                '/milvus.proto.query.QueryCoord/CreateResourceGroup',
                request_serializer=milvus__pb2.CreateResourceGroupRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.DropResourceGroup = channel.unary_unary(
                '/milvus.proto.query.QueryCoord/DropResourceGroup',
                request_serializer=milvus__pb2.DropResourceGroupRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.TransferNode = channel.unary_unary(
                '/milvus.proto.query.QueryCoord/TransferNode',
                request_serializer=milvus__pb2.TransferNodeRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.TransferReplica = channel.unary_unary(
                '/milvus.proto.query.QueryCoord/TransferReplica',
                request_serializer=query__coord__pb2.TransferReplicaRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.ListResourceGroups = channel.unary_unary(
                '/milvus.proto.query.QueryCoord/ListResourceGroups',
                request_serializer=milvus__pb2.ListResourceGroupsRequest.SerializeToString,
                response_deserializer=milvus__pb2.ListResourceGroupsResponse.FromString,
                )
        self.DescribeResourceGroup = channel.unary_unary(
                '/milvus.proto.query.QueryCoord/DescribeResourceGroup',
                request_serializer=query__coord__pb2.DescribeResourceGroupRequest.SerializeToString,
                response_deserializer=query__coord__pb2.DescribeResourceGroupResponse.FromString,
                )
        self.ListCheckers = channel.unary_unary(
                '/milvus.proto.query.QueryCoord/ListCheckers',
                request_serializer=query__coord__pb2.ListCheckersRequest.SerializeToString,
                response_deserializer=query__coord__pb2.ListCheckersResponse.FromString,
                )
        self.ActivateChecker = channel.unary_unary(
                '/milvus.proto.query.QueryCoord/ActivateChecker',
                request_serializer=query__coord__pb2.ActivateCheckerRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.DeactivateChecker = channel.unary_unary(
                '/milvus.proto.query.QueryCoord/DeactivateChecker',
                request_serializer=query__coord__pb2.DeactivateCheckerRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )


class QueryCoordServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetComponentStates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimeTickChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStatisticsChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ShowCollections(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ShowPartitions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadPartitions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReleasePartitions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadCollection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReleaseCollection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SyncNewCreatedPartition(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPartitionStates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSegmentInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadBalance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ShowConfigurations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMetrics(self, request, context):
        """https://wiki.lfaidata.foundation/display/MIL/MEP+8+--+Add+metrics+for+proxy
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReplicas(self, request, context):
        """https://wiki.lfaidata.foundation/display/MIL/MEP+23+--+Multiple+memory+replication+design
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetShardLeaders(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckHealth(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateResourceGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DropResourceGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransferNode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransferReplica(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListResourceGroups(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DescribeResourceGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCheckers(self, request, context):
        """ops interfaces
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ActivateChecker(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeactivateChecker(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryCoordServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetComponentStates': grpc.unary_unary_rpc_method_handler(
                    servicer.GetComponentStates,
                    request_deserializer=milvus__pb2.GetComponentStatesRequest.FromString,
                    response_serializer=milvus__pb2.ComponentStates.SerializeToString,
            ),
            'GetTimeTickChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTimeTickChannel,
                    request_deserializer=internal__pb2.GetTimeTickChannelRequest.FromString,
                    response_serializer=milvus__pb2.StringResponse.SerializeToString,
            ),
            'GetStatisticsChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatisticsChannel,
                    request_deserializer=internal__pb2.GetStatisticsChannelRequest.FromString,
                    response_serializer=milvus__pb2.StringResponse.SerializeToString,
            ),
            'ShowCollections': grpc.unary_unary_rpc_method_handler(
                    servicer.ShowCollections,
                    request_deserializer=query__coord__pb2.ShowCollectionsRequest.FromString,
                    response_serializer=query__coord__pb2.ShowCollectionsResponse.SerializeToString,
            ),
            'ShowPartitions': grpc.unary_unary_rpc_method_handler(
                    servicer.ShowPartitions,
                    request_deserializer=query__coord__pb2.ShowPartitionsRequest.FromString,
                    response_serializer=query__coord__pb2.ShowPartitionsResponse.SerializeToString,
            ),
            'LoadPartitions': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadPartitions,
                    request_deserializer=query__coord__pb2.LoadPartitionsRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'ReleasePartitions': grpc.unary_unary_rpc_method_handler(
                    servicer.ReleasePartitions,
                    request_deserializer=query__coord__pb2.ReleasePartitionsRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'LoadCollection': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadCollection,
                    request_deserializer=query__coord__pb2.LoadCollectionRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'ReleaseCollection': grpc.unary_unary_rpc_method_handler(
                    servicer.ReleaseCollection,
                    request_deserializer=query__coord__pb2.ReleaseCollectionRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'SyncNewCreatedPartition': grpc.unary_unary_rpc_method_handler(
                    servicer.SyncNewCreatedPartition,
                    request_deserializer=query__coord__pb2.SyncNewCreatedPartitionRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'GetPartitionStates': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPartitionStates,
                    request_deserializer=query__coord__pb2.GetPartitionStatesRequest.FromString,
                    response_serializer=query__coord__pb2.GetPartitionStatesResponse.SerializeToString,
            ),
            'GetSegmentInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSegmentInfo,
                    request_deserializer=query__coord__pb2.GetSegmentInfoRequest.FromString,
                    response_serializer=query__coord__pb2.GetSegmentInfoResponse.SerializeToString,
            ),
            'LoadBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadBalance,
                    request_deserializer=query__coord__pb2.LoadBalanceRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'ShowConfigurations': grpc.unary_unary_rpc_method_handler(
                    servicer.ShowConfigurations,
                    request_deserializer=internal__pb2.ShowConfigurationsRequest.FromString,
                    response_serializer=internal__pb2.ShowConfigurationsResponse.SerializeToString,
            ),
            'GetMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMetrics,
                    request_deserializer=milvus__pb2.GetMetricsRequest.FromString,
                    response_serializer=milvus__pb2.GetMetricsResponse.SerializeToString,
            ),
            'GetReplicas': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReplicas,
                    request_deserializer=milvus__pb2.GetReplicasRequest.FromString,
                    response_serializer=milvus__pb2.GetReplicasResponse.SerializeToString,
            ),
            'GetShardLeaders': grpc.unary_unary_rpc_method_handler(
                    servicer.GetShardLeaders,
                    request_deserializer=query__coord__pb2.GetShardLeadersRequest.FromString,
                    response_serializer=query__coord__pb2.GetShardLeadersResponse.SerializeToString,
            ),
            'CheckHealth': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckHealth,
                    request_deserializer=milvus__pb2.CheckHealthRequest.FromString,
                    response_serializer=milvus__pb2.CheckHealthResponse.SerializeToString,
            ),
            'CreateResourceGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateResourceGroup,
                    request_deserializer=milvus__pb2.CreateResourceGroupRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'DropResourceGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.DropResourceGroup,
                    request_deserializer=milvus__pb2.DropResourceGroupRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'TransferNode': grpc.unary_unary_rpc_method_handler(
                    servicer.TransferNode,
                    request_deserializer=milvus__pb2.TransferNodeRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'TransferReplica': grpc.unary_unary_rpc_method_handler(
                    servicer.TransferReplica,
                    request_deserializer=query__coord__pb2.TransferReplicaRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'ListResourceGroups': grpc.unary_unary_rpc_method_handler(
                    servicer.ListResourceGroups,
                    request_deserializer=milvus__pb2.ListResourceGroupsRequest.FromString,
                    response_serializer=milvus__pb2.ListResourceGroupsResponse.SerializeToString,
            ),
            'DescribeResourceGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.DescribeResourceGroup,
                    request_deserializer=query__coord__pb2.DescribeResourceGroupRequest.FromString,
                    response_serializer=query__coord__pb2.DescribeResourceGroupResponse.SerializeToString,
            ),
            'ListCheckers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCheckers,
                    request_deserializer=query__coord__pb2.ListCheckersRequest.FromString,
                    response_serializer=query__coord__pb2.ListCheckersResponse.SerializeToString,
            ),
            'ActivateChecker': grpc.unary_unary_rpc_method_handler(
                    servicer.ActivateChecker,
                    request_deserializer=query__coord__pb2.ActivateCheckerRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'DeactivateChecker': grpc.unary_unary_rpc_method_handler(
                    servicer.DeactivateChecker,
                    request_deserializer=query__coord__pb2.DeactivateCheckerRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'milvus.proto.query.QueryCoord', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class QueryCoord(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetComponentStates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryCoord/GetComponentStates',
            milvus__pb2.GetComponentStatesRequest.SerializeToString,
            milvus__pb2.ComponentStates.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTimeTickChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryCoord/GetTimeTickChannel',
            internal__pb2.GetTimeTickChannelRequest.SerializeToString,
            milvus__pb2.StringResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStatisticsChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryCoord/GetStatisticsChannel',
            internal__pb2.GetStatisticsChannelRequest.SerializeToString,
            milvus__pb2.StringResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ShowCollections(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryCoord/ShowCollections',
            query__coord__pb2.ShowCollectionsRequest.SerializeToString,
            query__coord__pb2.ShowCollectionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ShowPartitions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryCoord/ShowPartitions',
            query__coord__pb2.ShowPartitionsRequest.SerializeToString,
            query__coord__pb2.ShowPartitionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoadPartitions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryCoord/LoadPartitions',
            query__coord__pb2.LoadPartitionsRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReleasePartitions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryCoord/ReleasePartitions',
            query__coord__pb2.ReleasePartitionsRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoadCollection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryCoord/LoadCollection',
            query__coord__pb2.LoadCollectionRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReleaseCollection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryCoord/ReleaseCollection',
            query__coord__pb2.ReleaseCollectionRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SyncNewCreatedPartition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryCoord/SyncNewCreatedPartition',
            query__coord__pb2.SyncNewCreatedPartitionRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPartitionStates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryCoord/GetPartitionStates',
            query__coord__pb2.GetPartitionStatesRequest.SerializeToString,
            query__coord__pb2.GetPartitionStatesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSegmentInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryCoord/GetSegmentInfo',
            query__coord__pb2.GetSegmentInfoRequest.SerializeToString,
            query__coord__pb2.GetSegmentInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoadBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryCoord/LoadBalance',
            query__coord__pb2.LoadBalanceRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ShowConfigurations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryCoord/ShowConfigurations',
            internal__pb2.ShowConfigurationsRequest.SerializeToString,
            internal__pb2.ShowConfigurationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryCoord/GetMetrics',
            milvus__pb2.GetMetricsRequest.SerializeToString,
            milvus__pb2.GetMetricsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetReplicas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryCoord/GetReplicas',
            milvus__pb2.GetReplicasRequest.SerializeToString,
            milvus__pb2.GetReplicasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetShardLeaders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryCoord/GetShardLeaders',
            query__coord__pb2.GetShardLeadersRequest.SerializeToString,
            query__coord__pb2.GetShardLeadersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckHealth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryCoord/CheckHealth',
            milvus__pb2.CheckHealthRequest.SerializeToString,
            milvus__pb2.CheckHealthResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateResourceGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryCoord/CreateResourceGroup',
            milvus__pb2.CreateResourceGroupRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DropResourceGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryCoord/DropResourceGroup',
            milvus__pb2.DropResourceGroupRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransferNode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryCoord/TransferNode',
            milvus__pb2.TransferNodeRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransferReplica(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryCoord/TransferReplica',
            query__coord__pb2.TransferReplicaRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListResourceGroups(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryCoord/ListResourceGroups',
            milvus__pb2.ListResourceGroupsRequest.SerializeToString,
            milvus__pb2.ListResourceGroupsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DescribeResourceGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryCoord/DescribeResourceGroup',
            query__coord__pb2.DescribeResourceGroupRequest.SerializeToString,
            query__coord__pb2.DescribeResourceGroupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListCheckers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryCoord/ListCheckers',
            query__coord__pb2.ListCheckersRequest.SerializeToString,
            query__coord__pb2.ListCheckersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ActivateChecker(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryCoord/ActivateChecker',
            query__coord__pb2.ActivateCheckerRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeactivateChecker(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryCoord/DeactivateChecker',
            query__coord__pb2.DeactivateCheckerRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class QueryNodeStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetComponentStates = channel.unary_unary(
                '/milvus.proto.query.QueryNode/GetComponentStates',
                request_serializer=milvus__pb2.GetComponentStatesRequest.SerializeToString,
                response_deserializer=milvus__pb2.ComponentStates.FromString,
                )
        self.GetTimeTickChannel = channel.unary_unary(
                '/milvus.proto.query.QueryNode/GetTimeTickChannel',
                request_serializer=internal__pb2.GetTimeTickChannelRequest.SerializeToString,
                response_deserializer=milvus__pb2.StringResponse.FromString,
                )
        self.GetStatisticsChannel = channel.unary_unary(
                '/milvus.proto.query.QueryNode/GetStatisticsChannel',
                request_serializer=internal__pb2.GetStatisticsChannelRequest.SerializeToString,
                response_deserializer=milvus__pb2.StringResponse.FromString,
                )
        self.WatchDmChannels = channel.unary_unary(
                '/milvus.proto.query.QueryNode/WatchDmChannels',
                request_serializer=query__coord__pb2.WatchDmChannelsRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.UnsubDmChannel = channel.unary_unary(
                '/milvus.proto.query.QueryNode/UnsubDmChannel',
                request_serializer=query__coord__pb2.UnsubDmChannelRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.LoadSegments = channel.unary_unary(
                '/milvus.proto.query.QueryNode/LoadSegments',
                request_serializer=query__coord__pb2.LoadSegmentsRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.ReleaseCollection = channel.unary_unary(
                '/milvus.proto.query.QueryNode/ReleaseCollection',
                request_serializer=query__coord__pb2.ReleaseCollectionRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.LoadPartitions = channel.unary_unary(
                '/milvus.proto.query.QueryNode/LoadPartitions',
                request_serializer=query__coord__pb2.LoadPartitionsRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.ReleasePartitions = channel.unary_unary(
                '/milvus.proto.query.QueryNode/ReleasePartitions',
                request_serializer=query__coord__pb2.ReleasePartitionsRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.ReleaseSegments = channel.unary_unary(
                '/milvus.proto.query.QueryNode/ReleaseSegments',
                request_serializer=query__coord__pb2.ReleaseSegmentsRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.GetSegmentInfo = channel.unary_unary(
                '/milvus.proto.query.QueryNode/GetSegmentInfo',
                request_serializer=query__coord__pb2.GetSegmentInfoRequest.SerializeToString,
                response_deserializer=query__coord__pb2.GetSegmentInfoResponse.FromString,
                )
        self.SyncReplicaSegments = channel.unary_unary(
                '/milvus.proto.query.QueryNode/SyncReplicaSegments',
                request_serializer=query__coord__pb2.SyncReplicaSegmentsRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.GetStatistics = channel.unary_unary(
                '/milvus.proto.query.QueryNode/GetStatistics',
                request_serializer=query__coord__pb2.GetStatisticsRequest.SerializeToString,
                response_deserializer=internal__pb2.GetStatisticsResponse.FromString,
                )
        self.Search = channel.unary_unary(
                '/milvus.proto.query.QueryNode/Search',
                request_serializer=query__coord__pb2.SearchRequest.SerializeToString,
                response_deserializer=internal__pb2.SearchResults.FromString,
                )
        self.HybridSearch = channel.unary_unary(
                '/milvus.proto.query.QueryNode/HybridSearch',
                request_serializer=query__coord__pb2.HybridSearchRequest.SerializeToString,
                response_deserializer=query__coord__pb2.HybridSearchResult.FromString,
                )
        self.SearchSegments = channel.unary_unary(
                '/milvus.proto.query.QueryNode/SearchSegments',
                request_serializer=query__coord__pb2.SearchRequest.SerializeToString,
                response_deserializer=internal__pb2.SearchResults.FromString,
                )
        self.Query = channel.unary_unary(
                '/milvus.proto.query.QueryNode/Query',
                request_serializer=query__coord__pb2.QueryRequest.SerializeToString,
                response_deserializer=internal__pb2.RetrieveResults.FromString,
                )
        self.QueryStream = channel.unary_stream(
                '/milvus.proto.query.QueryNode/QueryStream',
                request_serializer=query__coord__pb2.QueryRequest.SerializeToString,
                response_deserializer=internal__pb2.RetrieveResults.FromString,
                )
        self.QuerySegments = channel.unary_unary(
                '/milvus.proto.query.QueryNode/QuerySegments',
                request_serializer=query__coord__pb2.QueryRequest.SerializeToString,
                response_deserializer=internal__pb2.RetrieveResults.FromString,
                )
        self.QueryStreamSegments = channel.unary_stream(
                '/milvus.proto.query.QueryNode/QueryStreamSegments',
                request_serializer=query__coord__pb2.QueryRequest.SerializeToString,
                response_deserializer=internal__pb2.RetrieveResults.FromString,
                )
        self.ShowConfigurations = channel.unary_unary(
                '/milvus.proto.query.QueryNode/ShowConfigurations',
                request_serializer=internal__pb2.ShowConfigurationsRequest.SerializeToString,
                response_deserializer=internal__pb2.ShowConfigurationsResponse.FromString,
                )
        self.GetMetrics = channel.unary_unary(
                '/milvus.proto.query.QueryNode/GetMetrics',
                request_serializer=milvus__pb2.GetMetricsRequest.SerializeToString,
                response_deserializer=milvus__pb2.GetMetricsResponse.FromString,
                )
        self.GetDataDistribution = channel.unary_unary(
                '/milvus.proto.query.QueryNode/GetDataDistribution',
                request_serializer=query__coord__pb2.GetDataDistributionRequest.SerializeToString,
                response_deserializer=query__coord__pb2.GetDataDistributionResponse.FromString,
                )
        self.SyncDistribution = channel.unary_unary(
                '/milvus.proto.query.QueryNode/SyncDistribution',
                request_serializer=query__coord__pb2.SyncDistributionRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )
        self.Delete = channel.unary_unary(
                '/milvus.proto.query.QueryNode/Delete',
                request_serializer=query__coord__pb2.DeleteRequest.SerializeToString,
                response_deserializer=common__pb2.Status.FromString,
                )


class QueryNodeServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetComponentStates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimeTickChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStatisticsChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchDmChannels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnsubDmChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadSegments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReleaseCollection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadPartitions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReleasePartitions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReleaseSegments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSegmentInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SyncReplicaSegments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStatistics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Search(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HybridSearch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchSegments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Query(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QuerySegments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryStreamSegments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ShowConfigurations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMetrics(self, request, context):
        """https://wiki.lfaidata.foundation/display/MIL/MEP+8+--+Add+metrics+for+proxy
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDataDistribution(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SyncDistribution(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryNodeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetComponentStates': grpc.unary_unary_rpc_method_handler(
                    servicer.GetComponentStates,
                    request_deserializer=milvus__pb2.GetComponentStatesRequest.FromString,
                    response_serializer=milvus__pb2.ComponentStates.SerializeToString,
            ),
            'GetTimeTickChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTimeTickChannel,
                    request_deserializer=internal__pb2.GetTimeTickChannelRequest.FromString,
                    response_serializer=milvus__pb2.StringResponse.SerializeToString,
            ),
            'GetStatisticsChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatisticsChannel,
                    request_deserializer=internal__pb2.GetStatisticsChannelRequest.FromString,
                    response_serializer=milvus__pb2.StringResponse.SerializeToString,
            ),
            'WatchDmChannels': grpc.unary_unary_rpc_method_handler(
                    servicer.WatchDmChannels,
                    request_deserializer=query__coord__pb2.WatchDmChannelsRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'UnsubDmChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.UnsubDmChannel,
                    request_deserializer=query__coord__pb2.UnsubDmChannelRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'LoadSegments': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadSegments,
                    request_deserializer=query__coord__pb2.LoadSegmentsRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'ReleaseCollection': grpc.unary_unary_rpc_method_handler(
                    servicer.ReleaseCollection,
                    request_deserializer=query__coord__pb2.ReleaseCollectionRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'LoadPartitions': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadPartitions,
                    request_deserializer=query__coord__pb2.LoadPartitionsRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'ReleasePartitions': grpc.unary_unary_rpc_method_handler(
                    servicer.ReleasePartitions,
                    request_deserializer=query__coord__pb2.ReleasePartitionsRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'ReleaseSegments': grpc.unary_unary_rpc_method_handler(
                    servicer.ReleaseSegments,
                    request_deserializer=query__coord__pb2.ReleaseSegmentsRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'GetSegmentInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSegmentInfo,
                    request_deserializer=query__coord__pb2.GetSegmentInfoRequest.FromString,
                    response_serializer=query__coord__pb2.GetSegmentInfoResponse.SerializeToString,
            ),
            'SyncReplicaSegments': grpc.unary_unary_rpc_method_handler(
                    servicer.SyncReplicaSegments,
                    request_deserializer=query__coord__pb2.SyncReplicaSegmentsRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'GetStatistics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatistics,
                    request_deserializer=query__coord__pb2.GetStatisticsRequest.FromString,
                    response_serializer=internal__pb2.GetStatisticsResponse.SerializeToString,
            ),
            'Search': grpc.unary_unary_rpc_method_handler(
                    servicer.Search,
                    request_deserializer=query__coord__pb2.SearchRequest.FromString,
                    response_serializer=internal__pb2.SearchResults.SerializeToString,
            ),
            'HybridSearch': grpc.unary_unary_rpc_method_handler(
                    servicer.HybridSearch,
                    request_deserializer=query__coord__pb2.HybridSearchRequest.FromString,
                    response_serializer=query__coord__pb2.HybridSearchResult.SerializeToString,
            ),
            'SearchSegments': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchSegments,
                    request_deserializer=query__coord__pb2.SearchRequest.FromString,
                    response_serializer=internal__pb2.SearchResults.SerializeToString,
            ),
            'Query': grpc.unary_unary_rpc_method_handler(
                    servicer.Query,
                    request_deserializer=query__coord__pb2.QueryRequest.FromString,
                    response_serializer=internal__pb2.RetrieveResults.SerializeToString,
            ),
            'QueryStream': grpc.unary_stream_rpc_method_handler(
                    servicer.QueryStream,
                    request_deserializer=query__coord__pb2.QueryRequest.FromString,
                    response_serializer=internal__pb2.RetrieveResults.SerializeToString,
            ),
            'QuerySegments': grpc.unary_unary_rpc_method_handler(
                    servicer.QuerySegments,
                    request_deserializer=query__coord__pb2.QueryRequest.FromString,
                    response_serializer=internal__pb2.RetrieveResults.SerializeToString,
            ),
            'QueryStreamSegments': grpc.unary_stream_rpc_method_handler(
                    servicer.QueryStreamSegments,
                    request_deserializer=query__coord__pb2.QueryRequest.FromString,
                    response_serializer=internal__pb2.RetrieveResults.SerializeToString,
            ),
            'ShowConfigurations': grpc.unary_unary_rpc_method_handler(
                    servicer.ShowConfigurations,
                    request_deserializer=internal__pb2.ShowConfigurationsRequest.FromString,
                    response_serializer=internal__pb2.ShowConfigurationsResponse.SerializeToString,
            ),
            'GetMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMetrics,
                    request_deserializer=milvus__pb2.GetMetricsRequest.FromString,
                    response_serializer=milvus__pb2.GetMetricsResponse.SerializeToString,
            ),
            'GetDataDistribution': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDataDistribution,
                    request_deserializer=query__coord__pb2.GetDataDistributionRequest.FromString,
                    response_serializer=query__coord__pb2.GetDataDistributionResponse.SerializeToString,
            ),
            'SyncDistribution': grpc.unary_unary_rpc_method_handler(
                    servicer.SyncDistribution,
                    request_deserializer=query__coord__pb2.SyncDistributionRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=query__coord__pb2.DeleteRequest.FromString,
                    response_serializer=common__pb2.Status.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'milvus.proto.query.QueryNode', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class QueryNode(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetComponentStates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryNode/GetComponentStates',
            milvus__pb2.GetComponentStatesRequest.SerializeToString,
            milvus__pb2.ComponentStates.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTimeTickChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryNode/GetTimeTickChannel',
            internal__pb2.GetTimeTickChannelRequest.SerializeToString,
            milvus__pb2.StringResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStatisticsChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryNode/GetStatisticsChannel',
            internal__pb2.GetStatisticsChannelRequest.SerializeToString,
            milvus__pb2.StringResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WatchDmChannels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryNode/WatchDmChannels',
            query__coord__pb2.WatchDmChannelsRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnsubDmChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryNode/UnsubDmChannel',
            query__coord__pb2.UnsubDmChannelRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoadSegments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryNode/LoadSegments',
            query__coord__pb2.LoadSegmentsRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReleaseCollection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryNode/ReleaseCollection',
            query__coord__pb2.ReleaseCollectionRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoadPartitions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryNode/LoadPartitions',
            query__coord__pb2.LoadPartitionsRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReleasePartitions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryNode/ReleasePartitions',
            query__coord__pb2.ReleasePartitionsRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReleaseSegments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryNode/ReleaseSegments',
            query__coord__pb2.ReleaseSegmentsRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSegmentInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryNode/GetSegmentInfo',
            query__coord__pb2.GetSegmentInfoRequest.SerializeToString,
            query__coord__pb2.GetSegmentInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SyncReplicaSegments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryNode/SyncReplicaSegments',
            query__coord__pb2.SyncReplicaSegmentsRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStatistics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryNode/GetStatistics',
            query__coord__pb2.GetStatisticsRequest.SerializeToString,
            internal__pb2.GetStatisticsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Search(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryNode/Search',
            query__coord__pb2.SearchRequest.SerializeToString,
            internal__pb2.SearchResults.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HybridSearch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryNode/HybridSearch',
            query__coord__pb2.HybridSearchRequest.SerializeToString,
            query__coord__pb2.HybridSearchResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchSegments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryNode/SearchSegments',
            query__coord__pb2.SearchRequest.SerializeToString,
            internal__pb2.SearchResults.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Query(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryNode/Query',
            query__coord__pb2.QueryRequest.SerializeToString,
            internal__pb2.RetrieveResults.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/milvus.proto.query.QueryNode/QueryStream',
            query__coord__pb2.QueryRequest.SerializeToString,
            internal__pb2.RetrieveResults.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QuerySegments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryNode/QuerySegments',
            query__coord__pb2.QueryRequest.SerializeToString,
            internal__pb2.RetrieveResults.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryStreamSegments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/milvus.proto.query.QueryNode/QueryStreamSegments',
            query__coord__pb2.QueryRequest.SerializeToString,
            internal__pb2.RetrieveResults.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ShowConfigurations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryNode/ShowConfigurations',
            internal__pb2.ShowConfigurationsRequest.SerializeToString,
            internal__pb2.ShowConfigurationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryNode/GetMetrics',
            milvus__pb2.GetMetricsRequest.SerializeToString,
            milvus__pb2.GetMetricsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDataDistribution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryNode/GetDataDistribution',
            query__coord__pb2.GetDataDistributionRequest.SerializeToString,
            query__coord__pb2.GetDataDistributionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SyncDistribution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryNode/SyncDistribution',
            query__coord__pb2.SyncDistributionRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/milvus.proto.query.QueryNode/Delete',
            query__coord__pb2.DeleteRequest.SerializeToString,
            common__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
